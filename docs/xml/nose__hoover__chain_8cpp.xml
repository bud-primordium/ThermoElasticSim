<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="zh">
  <compounddef id="nose__hoover__chain_8cpp" kind="file" language="C++">
    <compoundname>nose_hoover_chain.cpp</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">cstddef</includes>
    <incdepgraph>
      <node id="1">
        <label>src/cpp/nose_hoover_chain.cpp</label>
        <link refid="nose__hoover__chain_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="nose__hoover__chain_8cpp_1a3125ff81f4782751575e1013afc6c0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double compute_kinetic_energy</definition>
        <argsstring>(int num_atoms, const double *masses, const double *velocities)</argsstring>
        <name>compute_kinetic_energy</name>
        <param>
          <type>int</type>
          <declname>num_atoms</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>masses</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>velocities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/nose_hoover_chain.cpp" line="16" column="15" bodyfile="src/cpp/nose_hoover_chain.cpp" bodystart="16" bodyend="27"/>
        <referencedby refid="nose__hoover__chain_8cpp_1a6153d947d48fc1bc1b537db4bf5ef5bc" compoundref="nose__hoover__chain_8cpp" startline="44" endline="108">nose_hoover_chain</referencedby>
      </memberdef>
      <memberdef kind="function" id="nose__hoover__chain_8cpp_1a6153d947d48fc1bc1b537db4bf5ef5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nose_hoover_chain</definition>
        <argsstring>(double dt, int num_atoms, const double *masses, double *velocities, const double *forces, double *xi, const double *Q, int chain_length, double target_temperature)</argsstring>
        <name>nose_hoover_chain</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_atoms</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>masses</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>velocities</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>forces</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chain_length</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target_temperature</declname>
        </param>
        <briefdescription>
<para>应用 Nose-Hoover 链恒温器 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>时间步长 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_atoms</parametername>
</parameternamelist>
<parameterdescription>
<para>原子数量 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>masses</parametername>
</parameternamelist>
<parameterdescription>
<para>原子质量数组（长度为 num_atoms） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocities</parametername>
</parameternamelist>
<parameterdescription>
<para>原子速度数组（长度为 3*num_atoms） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forces</parametername>
</parameternamelist>
<parameterdescription>
<para>原子力数组（长度为 3*num_atoms） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>热浴变量数组（长度为 chain_length） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>热浴质量参数数组（长度为 chain_length） </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chain_length</parametername>
</parameternamelist>
<parameterdescription>
<para>热浴链的长度 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>目标温度 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/cpp/nose_hoover_chain.cpp" line="44" column="10" bodyfile="src/cpp/nose_hoover_chain.cpp" bodystart="44" bodyend="108"/>
        <references refid="nose__hoover__chain_8cpp_1a3125ff81f4782751575e1013afc6c0c5" compoundref="nose__hoover__chain_8cpp" startline="16" endline="27">compute_kinetic_energy</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Nose-Hoover 链恒温器的实现 </para>
    </briefdescription>
    <detaileddescription>
<para>该文件包含 Nose-Hoover 链恒温器的实现，主要用于分子动力学模拟中的温度控制。 它通过引入多个热浴变量，递推更新系统的速度和热浴变量，从而实现温度调节。</para>
<para>@autor Gilbert Young <simplesect kind="date"><para>2024-10-20 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>内联函数用于计算动能</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="nose__hoover__chain_8cpp_1a3125ff81f4782751575e1013afc6c0c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="nose__hoover__chain_8cpp_1a3125ff81f4782751575e1013afc6c0c5" kindref="member">compute_kinetic_energy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_atoms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*masses,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*velocities)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kinetic_energy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_atoms;<sp/>++i)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx<sp/>=<sp/>velocities[3<sp/>*<sp/>i];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy<sp/>=<sp/>velocities[3<sp/>*<sp/>i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vz<sp/>=<sp/>velocities[3<sp/>*<sp/>i<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kinetic_energy<sp/>+=<sp/>0.5<sp/>*<sp/>masses[i]<sp/>*<sp/>(vx<sp/>*<sp/>vx<sp/>+<sp/>vy<sp/>*<sp/>vy<sp/>+<sp/>vz<sp/>*<sp/>vz);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kinetic_energy;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44" refid="nose__hoover__chain_8cpp_1a6153d947d48fc1bc1b537db4bf5ef5bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nose__hoover__chain_8cpp_1a6153d947d48fc1bc1b537db4bf5ef5bc" kindref="member">nose_hoover_chain</ref>(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_atoms,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*masses,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*velocities,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*forces,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xi,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*Q,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chain_length,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_temperature)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chain_length<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>简单的参数检查</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt_half<sp/>=<sp/>dt<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kB<sp/>=<sp/>8.617333262e-5;<sp/></highlight><highlight class="comment">//<sp/>玻尔兹曼常数，单位<sp/>eV/K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算动能</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kinetic_energy<sp/>=<sp/><ref refid="nose__hoover__chain_8cpp_1a3125ff81f4782751575e1013afc6c0c5" kindref="member">compute_kinetic_energy</ref>(num_atoms,<sp/>masses,<sp/>velocities);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>计算<sp/>G_chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>预分配数组以避免<sp/>std::vector<sp/>的构造开销</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*G_chain<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[chain_length];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G_chain[0]<sp/>=<sp/>(2.0<sp/>*<sp/>kinetic_energy<sp/>-<sp/>3.0<sp/>*<sp/>num_atoms<sp/>*<sp/>kB<sp/>*<sp/>target_temperature)<sp/>/<sp/>Q[0];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>chain_length;<sp/>++i)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G_chain[i]<sp/>=<sp/>(Q[i<sp/>-<sp/>1]<sp/>*<sp/>xi[i<sp/>-<sp/>1]<sp/>*<sp/>xi[i<sp/>-<sp/>1]<sp/>-<sp/>kB<sp/>*<sp/>target_temperature)<sp/>/<sp/>Q[i];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>更新<sp/>xi<sp/>-<sp/>第一半步（从链末端到开始）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>chain_length<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi[i]<sp/>+=<sp/>G_chain[i]<sp/>*<sp/>dt_half;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>缩放速度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>std::exp(-xi[0]<sp/>*<sp/>dt_half);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_atoms;<sp/>++i)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>3<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocities[idx]<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocities[idx<sp/>+<sp/>1]<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocities[idx<sp/>+<sp/>2]<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>更新<sp/>xi<sp/>-<sp/>第二半步（从开始到链末端）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>chain_length;<sp/>++i)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi[i]<sp/>+=<sp/>G_chain[i]<sp/>*<sp/>dt_half;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>更新速度，考虑力</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_atoms;<sp/>++i)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>3<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv_mass<sp/>=<sp/>1.0<sp/>/<sp/>masses[i];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocities[idx]<sp/>+=<sp/>dt<sp/>*<sp/>forces[idx]<sp/>*<sp/>inv_mass;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocities[idx<sp/>+<sp/>1]<sp/>+=<sp/>dt<sp/>*<sp/>forces[idx<sp/>+<sp/>1]<sp/>*<sp/>inv_mass;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocities[idx<sp/>+<sp/>2]<sp/>+=<sp/>dt<sp/>*<sp/>forces[idx<sp/>+<sp/>2]<sp/>*<sp/>inv_mass;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>清理动态分配的内存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>G_chain;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/cpp/nose_hoover_chain.cpp"/>
  </compounddef>
</doxygen>
